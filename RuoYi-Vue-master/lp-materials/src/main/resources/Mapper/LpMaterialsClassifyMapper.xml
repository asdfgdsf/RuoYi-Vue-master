<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mapper.LpMaterialsClassifyMapper">

    <resultMap type="com.ruoyi.domain.LpMaterialsClassify" id="LpMaterialsClassifyResult">
        <result property="materialsClassifyId"    column="materials_classify_id"    />
        <result property="materialsClassifyName"    column="materials_classify_name"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectLpMaterialsClassifyVo">
        select materials_classify_id, materials_classify_name, remark, create_by, create_time, update_by, update_time from lp_materials_classify
    </sql>

    <select id="selectLpMaterialsClassifyList" parameterType="com.ruoyi.domain.LpMaterialsClassify" resultMap="LpMaterialsClassifyResult">
        <include refid="selectLpMaterialsClassifyVo"/>
        <where>
            <if test="materialsClassifyName != null  and materialsClassifyName != ''"> and materials_classify_name like concat('%', #{materialsClassifyName}, '%')</if>
        </where>
    </select>

    <select id="selectLpMaterialsClassifyByMaterialsClassifyId" parameterType="Long" resultMap="LpMaterialsClassifyResult">
        <include refid="selectLpMaterialsClassifyVo"/>
        where materials_classify_id = #{materialsClassifyId}
    </select>

    <insert id="insertLpMaterialsClassify" parameterType="com.ruoyi.domain.LpMaterialsClassify" useGeneratedKeys="true" keyProperty="materialsClassifyId">
        insert into lp_materials_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialsClassifyName != null">materials_classify_name,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialsClassifyName != null">#{materialsClassifyName},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateLpMaterialsClassify" parameterType="com.ruoyi.domain.LpMaterialsClassify">
        update lp_materials_classify
        <trim prefix="SET" suffixOverrides=",">
            <if test="materialsClassifyName != null">materials_classify_name = #{materialsClassifyName},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where materials_classify_id = #{materialsClassifyId}
    </update>

    <delete id="deleteLpMaterialsClassifyByMaterialsClassifyId" parameterType="Long">
        delete from lp_materials_classify where materials_classify_id = #{materialsClassifyId}
    </delete>

    <delete id="deleteLpMaterialsClassifyByMaterialsClassifyIds" parameterType="String">
        delete from lp_materials_classify where materials_classify_id in
        <foreach item="materialsClassifyId" collection="array" open="(" separator="," close=")">
            #{materialsClassifyId}
        </foreach>
    </delete>
</mapper>
